<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NephroGuide CRRT Decision Support</title>
    <style>
        :root {
            --primary: #3b82f6;
            --primary-dark: #2563eb;
            --secondary: #60a5fa;
            --danger: #ef4444;
            --warning: #f59e0b;
            --success: #10b981;
            --background: #f8fafc;
            --text: #0f172a;
            --card-bg: #ffffff;
            --card-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            --border-radius: 12px;
            --input-bg: #f1f5f9;
            --border-color: #e2e8f0;
            --header-bg: #f0f9ff;
            --transition: all 0.3s ease;
        }

        [data-theme="dark"] {
            --primary: #3b82f6;
            --primary-dark: #2563eb;
            --secondary: #60a5fa;
            --danger: #f87171;
            --warning: #fbbf24;
            --success: #34d399;
            --background: #0f172a;
            --text: #f8fafc;
            --card-bg: #1e293b;
            --card-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.3), 0 4px 6px -2px rgba(0, 0, 0, 0.2);
            --input-bg: #1e293b;
            --border-color: #334155;
            --header-bg: #1e293b;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Inter', 'Segoe UI', system-ui, -apple-system, sans-serif;
            background-color: var(--background);
            color: var(--text);
            margin: 0;
            padding: 0;
            transition: var(--transition);
            line-height: 1.5;
        }

        .app-container {
            display: grid;
            grid-template-areas:
                "header header header"
                "patient circuit fluids"
                "results results results";
            grid-template-columns: 320px 1fr 350px;
            grid-template-rows: auto 1fr auto;
            min-height: 100vh;
            gap: 24px;
            padding: 24px;
            max-width: 1800px;
            margin: 0 auto;
        }

        .card {
            background-color: var(--card-bg);
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            padding: 24px;
            margin-bottom: 24px;
            border: 1px solid var(--border-color);
            transition: var(--transition);
        }

        .card:hover {
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
            transform: translateY(-2px);
        }

        /* App header styles */
        .app-header {
            grid-area: header;
            background-color: var(--header-bg);
            border-radius: var(--border-radius);
            padding: 16px 24px;
            margin-bottom: 12px;
            border: 1px solid var(--border-color);
            box-shadow: var(--card-shadow);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header-content h1 {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--primary);
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .app-controls {
            display: flex;
            gap: 12px;
            align-items: center;
        }
        
        /* Form input styles */
        input, select {
            width: 100%;
            padding: 10px 16px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            background-color: var(--input-bg);
            color: var(--text);
            font-size: 0.95rem;
            transition: var(--transition);
        }

        input:focus, select:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.25);
        }

        .input-group {
            margin-bottom: 16px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            font-size: 0.95rem;
            color: var(--text);
        }

        h2 {
            font-size: 1.4rem;
            margin-bottom: 20px;
            color: var(--primary);
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        h3 {
            font-size: 1.1rem;
            margin-bottom: 16px;
            color: var(--text);
            font-weight: 600;
        }
        
        /* Circuit visualization styles */
        .circuit-section {
            padding-top: 20px;
        }
        
        .circuit-animation {
            margin-top: 24px;
            margin-bottom: 24px;
            border-radius: 10px;
            padding: 16px;
            background-color: var(--card-bg);
            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);
            border: 1px solid var(--border-color);
        }
        
        .circuit-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 16px;
            margin-bottom: 16px;
        }
        
        .circuit-header h2 {
            margin-bottom: 0;
        }
        
        .dialysate-label, .pre-replacement-label, .post-replacement-label, .effluent-label {
            font-weight: 600;
        }

        /* Action button styles */
        .btn-action {
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 10px 18px;
            font-weight: 600;
            font-size: 0.95rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.2s ease;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .btn-action:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

        .btn-action:active {
            transform: translateY(0);
        }

        .btn-check-now {
            background-color: var(--success);
            font-size: 1rem;
            padding: 10px 20px;
        }

        .btn-check-now:hover {
            background-color: #0d9488;
        }

        /* Waveform Visualization Styles */
        .waveform-visualization {
            margin-top: 20px;
            border-top: 1px solid #e2e8f0;
            padding-top: 15px;
        }

        .waveform-tabs {
            display: flex;
            margin-bottom: 16px;
            gap: 8px;
        }

        .waveform-tab {
            background-color: var(--input-bg);
            border: 1px solid var(--border-color);
            padding: 8px 16px;
            cursor: pointer;
            transition: all 0.2s ease;
            border-radius: 8px;
            font-weight: 500;
            font-size: 0.9rem;
            color: var(--text);
            text-transform: none;
            letter-spacing: normal;
            box-shadow: none;
        }

        .waveform-tab.active {
            background-color: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .waveform-tab:hover:not(.active) {
            background: var(--border-color);
            transform: none;
            box-shadow: none;
        }

        .waveform-display {
            border: 1px solid var(--border-color);
            border-radius: 10px;
            padding: 16px;
            background-color: var(--card-bg);
            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        canvas#waveform-canvas {
            width: 100%;
            height: 180px;
            display: block;
        }

        /* Animation speed controls */
        .animation-controls {
            display: flex;
            justify-content: center;
            margin-top: 10px;
            gap: 10px;
        }

        .animation-speed-control {
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        /* Ventilator Parameters Styles */
        .vent-params-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 15px;
        }
        
        .vent-param-item {
            background-color: var(--card-bg);
            border-left: 4px solid var(--primary);
            padding: 15px;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }
        
        .param-label {
            font-size: 14px;
            color: #64748b;
            margin-bottom: 5px;
        }
        
        .param-value {
            font-size: 22px;
            font-weight: bold;
            color: var(--text);
            margin-bottom: 8px;
        }
        
        .param-unit {
            font-size: 14px;
            font-weight: normal;
            color: #64748b;
        }
        
        .param-status {
            font-size: 13px;
            display: flex;
            align-items: center;
            gap: 6px;
        }
        
        .param-status.good {
            color: var(--success);
        }
        
        .param-status.warning {
            color: var(--warning);
        }
        
        .param-status.danger {
            color: var(--danger);
        }
        
        .param-status i {
            font-size: 10px;
        }

        /* Detailed styling for all components... */
        /* (Would include styles for inputs, buttons, circuit visualization, etc.) */

        /* Button and interactive element styles */
        button, .btn-action {
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 10px 18px;
            font-weight: 600;
            font-size: 0.95rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.2s ease;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        button:hover, .btn-action:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

        button:active, .btn-action:active {
            transform: translateY(0);
        }

        #theme-toggle {
            background-color: transparent;
            color: var(--text);
            border: 1px solid var(--border-color);
            font-size: 0.9rem;
            text-transform: none;
            letter-spacing: normal;
        }

        #theme-toggle:hover {
            background-color: var(--input-bg);
            transform: none;
            box-shadow: none;
        }

        #language-select {
            padding: 9px 16px;
            border-radius: 8px;
            max-width: 140px;
        }

        .modality-tabs {
            display: flex;
            gap: 8px;
            margin-bottom: 24px;
            flex-wrap: wrap;
        }
        
        .modality-btn {
            padding: 8px 16px;
            border: 1px solid var(--border-color);
            background: var(--input-bg);
            cursor: pointer;
            border-radius: 8px;
            font-weight: 500;
            font-size: 0.9rem;
            color: var(--text);
            text-transform: none;
            letter-spacing: normal;
            box-shadow: none;
        }
        
        .modality-btn.active {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .modality-btn:hover:not(.active) {
            background: var(--border-color);
            transform: none;
            box-shadow: none;
        }

        /* Lab grid layout */
        .lab-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
            gap: 16px;
            margin-top: 20px;
        }

        .lab-item {
            background-color: var(--input-bg);
            border-radius: 8px;
            padding: 16px;
            transition: var(--transition);
            border: 1px solid var(--border-color);
        }

        .lab-item:hover {
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transform: translateY(-2px);
        }

        .lab-item label {
            font-size: 0.85rem;
            opacity: 0.85;
            margin-bottom: 10px;
        }

        .lab-value {
            font-weight: 600;
            background-color: transparent;
            border: none;
            border-bottom: 2px solid var(--border-color);
            border-radius: 0;
            padding: 6px 4px;
            font-size: 1.1rem;
            width: 100%;
            text-align: center;
        }

        .lab-value:focus {
            border-bottom-color: var(--primary);
            box-shadow: none;
        }

        /* Pressure readings display */
        .pressure-readings {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
            gap: 16px;
            margin-top: 20px;
        }

        .pressure {
            background-color: var(--input-bg);
            border-radius: 8px;
            padding: 16px;
            text-align: center;
            position: relative;
            border: 1px solid var(--border-color);
        }

        .pressure span:first-child {
            font-size: 0.85rem;
            opacity: 0.85;
            display: block;
            margin-bottom: 8px;
        }

        .pressure-value {
            font-size: 1.4rem;
            font-weight: 600;
            color: var(--primary);
        }

        /* Circuit controls */
        .circuit-controls {
            margin-top: 24px;
            padding-top: 20px;
            border-top: 1px solid var(--border-color);
        }

        .control-group {
            margin-bottom: 20px;
        }

        .control-group label {
            margin-bottom: 12px;
            display: block;
        }

        input[type="range"] {
            -webkit-appearance: none;
            width: 100%;
            height: 6px;
            border-radius: 5px;
            background: var(--input-bg);
            outline: none;
            margin: 10px 0;
        }

        input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: var(--primary);
            cursor: pointer;
            box-shadow: 0 1px 3px rgba(0,0,0,0.2);
        }

        input[type="range"]::-moz-range-thumb {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: var(--primary);
            cursor: pointer;
            box-shadow: 0 1px 3px rgba(0,0,0,0.2);
            border: none;
        }

        #blood-flow-value {
            font-weight: 600;
            color: var(--primary);
            margin-left: 8px;
        }
        
        /* Fluid Management Section */
        .fluid-control-group {
            background-color: var(--input-bg);
            border-radius: var(--border-radius);
            padding: 20px;
            margin-bottom: 24px;
            border: 1px solid var(--border-color);
        }
        
        .fluid-control {
            margin-bottom: 16px;
        }
        
        .fluid-control label {
            margin-bottom: 8px;
        }
        
        .custom-electrolytes {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 12px;
            margin-top: 16px;
        }
        
        .electrolyte-input {
            margin-bottom: 8px;
        }
        
        .electrolyte-input label {
            margin-bottom: 6px;
            font-size: 0.85rem;
        }
        
        .electrolyte-input input {
            padding: 8px 12px;
        }
        
        /* Ventilator Parameters Styles */
        .vent-params-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 24px;
        }
        
        .vent-param-item {
            background-color: var(--card-bg);
            border-left: 4px solid var(--primary);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transition: var(--transition);
        }
        
        .vent-param-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.08);
        }
        
        .param-label {
            font-size: 0.9rem;
            color: #64748b;
            margin-bottom: 8px;
        }
        
        .param-value {
            font-size: 1.6rem;
            font-weight: 700;
            color: var(--text);
            margin-bottom: 12px;
        }
        
        .param-unit {
            font-size: 0.9rem;
            font-weight: normal;
            color: #64748b;
            margin-left: 4px;
        }
        
        .param-status {
            font-size: 0.85rem;
            display: flex;
            align-items: center;
            gap: 6px;
            padding: 4px 10px;
            border-radius: 12px;
            width: fit-content;
        }
        
        .param-status.good {
            color: var(--success);
            background-color: rgba(16, 185, 129, 0.1);
        }
        
        .param-status.warning {
            color: var(--warning);
            background-color: rgba(245, 158, 11, 0.1);
        }
        
        .param-status.danger {
            color: var(--danger);
            background-color: rgba(239, 68, 68, 0.1);
        }

        /* Results Section */
        .results-section {
            grid-area: results;
            background-color: var(--card-bg);
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            border: 1px solid var(--border-color);
            overflow: hidden;
        }
        
        .results-tabs {
            display: flex;
            background-color: var(--input-bg);
            border-bottom: 1px solid var(--border-color);
        }
        
        .results-tab {
            padding: 16px 24px;
            cursor: pointer;
            font-weight: 600;
            position: relative;
            color: var(--text);
            background: transparent;
            border: none;
            box-shadow: none;
            text-transform: none;
            letter-spacing: normal;
        }
        
        .results-tab.active {
            color: var(--primary);
        }
        
        .results-tab.active::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 3px;
            background-color: var(--primary);
        }
        
        .results-tab:hover:not(.active) {
            background-color: rgba(0, 0, 0, 0.05);
            transform: none;
            box-shadow: none;
        }
        
        .results-content {
            padding: 24px;
        }
        
        .recommendation-card {
            background-color: var(--input-bg);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            border-left: 4px solid var(--primary);
            transition: var(--transition);
        }
        
        .recommendation-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.08);
        }
        
        .recommendation-title {
            font-weight: 600;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            gap: 8px;
            color: var(--primary);
        }
        
        .recommendation-body {
            font-size: 0.95rem;
            line-height: 1.6;
        }
        
        .recommendation-reason {
            font-size: 0.85rem;
            margin-top: 10px;
            color: #64748b;
            padding: 8px 12px;
            background-color: rgba(0, 0, 0, 0.03);
            border-radius: 6px;
        }
        
        /* Animation speed controls */
        .animation-controls {
            display: flex;
            justify-content: center;
            margin-top: 16px;
            gap: 16px;
            padding: 10px 16px;
            background-color: var(--input-bg);
            border-radius: 10px;
            border: 1px solid var(--border-color);
        }
        
        .animation-speed-control {
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .animation-speed-control label {
            margin-bottom: 0;
            font-size: 0.85rem;
            white-space: nowrap;
        }
        
        /* Updated mode description */
        .mode-description {
            background-color: var(--input-bg);
            border-radius: 10px;
            padding: 16px;
            margin-top: 24px;
            border: 1px solid var(--border-color);
        }
        
        .mode-description h3 {
            color: var(--primary);
            margin-bottom: 10px;
            font-weight: 600;
            font-size: 1.1rem;
        }
        
        .mode-description p {
            font-size: 0.95rem;
            line-height: 1.6;
        }
        
        /* Add tooltips and info icons */
        .tooltip-container {
            position: relative;
            display: inline-block;
        }
        
        .info-icon {
            cursor: pointer;
            color: var(--primary);
            font-size: 0.85rem;
            opacity: 0.8;
            transition: var(--transition);
        }
        
        .info-icon:hover {
            opacity: 1;
        }
        
        .tooltip {
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            background-color: var(--card-bg);
            color: var(--text);
            border-radius: 6px;
            padding: 8px 12px;
            width: 200px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            font-size: 0.8rem;
            z-index: 100;
            opacity: 0;
            visibility: hidden;
            transition: var(--transition);
            border: 1px solid var(--border-color);
        }
        
        .tooltip-container:hover .tooltip {
            opacity: 1;
            visibility: visible;
        }
        
        /* Responsive design improvements */
        @media (max-width: 1200px) {
            .app-container {
                grid-template-areas:
                    "header header"
                    "patient circuit"
                    "fluids fluids"
                    "results results";
                grid-template-columns: 320px 1fr;
            }
        }
        
        @media (max-width: 768px) {
            .app-container {
                grid-template-areas:
                    "header"
                    "patient"
                    "circuit"
                    "fluids"
                    "results";
                grid-template-columns: 1fr;
                padding: 16px;
                gap: 16px;
            }
            
            .header-content {
                flex-direction: column;
                align-items: flex-start;
                gap: 16px;
            }
            
            .app-controls {
                width: 100%;
                justify-content: flex-start;
                flex-wrap: wrap;
            }
            
            .circuit-header {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .modality-tabs {
                width: 100%;
            }
        }
        
        /* Fluid Summary Styles */
        .fluid-summary {
            margin-top: 24px;
            padding: 20px;
            background-color: var(--input-bg);
            border-radius: var(--border-radius);
            border: 1px solid var(--border-color);
        }
        
        .dose-cards {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 16px;
            margin-top: 16px;
        }
        
        .dose-card {
            background-color: var(--card-bg);
            border-radius: 8px;
            padding: 16px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            transition: var(--transition);
            border: 1px solid var(--border-color);
        }
        
        .dose-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
        }
        
        .dose-label {
            font-size: 0.85rem;
            color: #64748b;
            margin-bottom: 8px;
        }
        
        .dose-value {
            font-size: 1.4rem;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 8px;
        }
        
        .dose-value.negative {
            color: var(--danger);
        }
        
        .dose-unit {
            font-size: 0.85rem;
            font-weight: normal;
        }
        
        .dose-info {
            font-size: 0.8rem;
            color: #64748b;
        }
        
        /* Dark mode toggle */
        #theme-toggle {
            padding: 8px 16px;
            display: flex;
            align-items: center;
            gap: 8px;
            position: relative;
            overflow: hidden;
        }
        
        #theme-toggle i {
            transform: translateY(0);
            transition: transform 0.3s ease;
        }
        
        [data-theme="dark"] #theme-toggle i.fa-moon {
            transform: translateY(-20px);
        }
        
        [data-theme="dark"] #theme-toggle i.fa-sun {
            transform: translateY(0);
        }
        
        #theme-toggle i.fa-sun {
            position: absolute;
            transform: translateY(20px);
            color: #f59e0b;
        }
        
        [data-theme="dark"] #theme-toggle {
            color: #f8fafc;
        }
        
        /* Add scroll to lab items when there are many */
        @media (max-height: 800px) {
            .lab-grid {
                max-height: 300px;
                overflow-y: auto;
                padding-right: 5px;
            }
            
            .lab-grid::-webkit-scrollbar {
                width: 8px;
            }
            
            .lab-grid::-webkit-scrollbar-track {
                background: var(--input-bg);
                border-radius: 4px;
            }
            
            .lab-grid::-webkit-scrollbar-thumb {
                background: var(--border-color);
                border-radius: 4px;
            }
            
            .lab-grid::-webkit-scrollbar-thumb:hover {
                background: var(--primary);
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <div class="app-container">
        <!-- Header Section -->
        <header class="app-header" style="grid-area: header;">
            <div class="header-content">
                <h1><i class="fas fa-kidney"></i> NephroGuide CRRT</h1>
                <div class="app-controls">
                    <button id="check-now-btn" class="btn-action btn-check-now">
                        <i class="fas fa-play-circle"></i> Check Now
                    </button>
                    <button id="theme-toggle">
                        <i class="fas fa-moon"></i>
                        <i class="fas fa-sun"></i>
                        Theme
                    </button>
                    <select id="language-select">
                        <option value="en">English</option>
                        <option value="es">Español</option>
                        <option value="fr">Français</option>
                    </select>
                </div>
            </div>
        </header>

        <!-- Patient Data Section -->
        <section class="patient-section" style="grid-area: patient;">
            <div class="card">
                <h2><i class="fas fa-user-circle"></i> Patient Data</h2>
                <div class="input-group">
                    <label for="weight">Weight (kg)</label>
                    <input type="number" id="weight" min="20" max="300" step="0.1" value="70">
                </div>
                <div class="input-group">
                    <label for="height">Height (cm)</label>
                    <input type="number" id="height" min="100" max="250" value="170">
                </div>
                <div class="input-group">
                    <label for="age">Age</label>
                    <input type="number" id="age" min="18" max="120" value="50">
                </div>
                <div class="input-group">
                    <label for="apache">APACHE II Score <span class="tooltip-container"><i class="fas fa-info-circle info-icon"></i><span class="tooltip">Acute Physiology and Chronic Health Evaluation II - A severity of disease classification system</span></span></label>
                    <input type="number" id="apache" min="0" max="71" value="15">
                </div>
            </div>

            <div class="card">
                <h2><i class="fas fa-flask"></i> Current Labs</h2>
                <div class="lab-grid">
                    <div class="lab-item">
                        <label>K⁺ (mEq/L)</label>
                        <input type="number" class="lab-value" value="4.2" step="0.1">
                    </div>
                    <div class="lab-item">
                        <label>HCO₃⁻ (mEq/L)</label>
                        <input type="number" class="lab-value" value="22" step="1">
                    </div>
                    <div class="lab-item">
                        <label>Creatinine (mg/dL)</label>
                        <input type="number" class="lab-value" value="2.5" step="0.1">
                    </div>
                    <div class="lab-item">
                        <label>pH</label>
                        <input type="number" class="lab-value" value="7.32" step="0.01">
                    </div>
                    <div class="lab-item">
                        <label>Na⁺ (mEq/L)</label>
                        <input type="number" class="lab-value" value="138" step="1">
                    </div>
                    <div class="lab-item">
                        <label>Cl⁻ (mEq/L)</label>
                        <input type="number" class="lab-value" value="104" step="1">
                    </div>
                    <div class="lab-item">
                        <label>BUN (mg/dL)</label>
                        <input type="number" class="lab-value" value="58" step="1">
                    </div>
                    <div class="lab-item">
                        <label>Ca²⁺ (mg/dL)</label>
                        <input type="number" class="lab-value" value="8.7" step="0.1">
                    </div>
                </div>
            </div>
        </section>

        <!-- Circuit Visualization Section -->
        <section class="circuit-section" style="grid-area: circuit;">
            <div class="card">
                <div class="circuit-header">
                    <h2><i class="fas fa-project-diagram"></i> CRRT Circuit</h2>
                    <div class="modality-tabs">
                        <button class="modality-btn active" data-modality="CVVH">CVVH</button>
                        <button class="modality-btn" data-modality="CVVHD">CVVHD</button>
                        <button class="modality-btn" data-modality="CVVHDF">CVVHDF</button>
                        <button class="modality-btn" data-modality="SCUF">SCUF</button>
                        <button class="modality-btn" data-modality="TPE">TPE</button>
                    </div>
                </div>
                <div class="circuit-animation" id="circuit-animation">
                    <!-- Dynamic SVG will be inserted here -->
                    <svg width="100%" height="450" viewBox="0 0 800 450" id="circuit-svg">
                        <!-- Circuit Container with margin -->
                        <g transform="translate(40, 30)">
                            <!-- Gradient and filter definitions -->
                            <defs>
                                <!-- Blood gradients -->
                                <linearGradient id="bloodGradient" x1="0%" y1="0%" x2="100%" y2="0%">
                                    <stop offset="0%" style="stop-color:#ef4444;stop-opacity:1" />
                                    <stop offset="100%" style="stop-color:#f87171;stop-opacity:1" />
                                </linearGradient>
                                <linearGradient id="returnGradient" x1="0%" y1="0%" x2="100%" y2="0%">
                                    <stop offset="0%" style="stop-color:#10b981;stop-opacity:1" />
                                    <stop offset="100%" style="stop-color:#34d399;stop-opacity:1" />
                                </linearGradient>
                                
                                <!-- Fluid gradients -->
                                <linearGradient id="dialysateGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                                    <stop offset="0%" style="stop-color:#3b82f6;stop-opacity:1" />
                                    <stop offset="100%" style="stop-color:#60a5fa;stop-opacity:1" />
                                </linearGradient>
                                <linearGradient id="replacementGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                                    <stop offset="0%" style="stop-color:#60a5fa;stop-opacity:1" />
                                    <stop offset="100%" style="stop-color:#93c5fd;stop-opacity:1" />
                                </linearGradient>
                                <linearGradient id="filtrateGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                                    <stop offset="0%" style="stop-color:#f59e0b;stop-opacity:1" />
                                    <stop offset="100%" style="stop-color:#fbbf24;stop-opacity:1" />
                                </linearGradient>
                                
                                <!-- Glow effects -->
                                <filter id="glow" height="300%" width="300%" x="-100%" y="-100%">
                                    <feGaussianBlur stdDeviation="3" result="blur" />
                                    <feComposite in="SourceGraphic" in2="blur" operator="over" />
                                </filter>
                                
                                <!-- Fluid bag pattern -->
                                <pattern id="fluidPattern" patternUnits="userSpaceOnUse" width="10" height="10">
                                    <circle cx="5" cy="5" r="1" fill="white" fill-opacity="0.3" />
                                </pattern>
                                
                                <!-- Arrow marker for flow direction -->
                                <marker id="arrow" viewBox="0 0 10 10" refX="5" refY="5"
                                    markerWidth="4" markerHeight="4" orient="auto">
                                    <path d="M 0 0 L 10 5 L 0 10 z" fill="white" />
                                </marker>
                                <marker id="arrowBlood" viewBox="0 0 10 10" refX="5" refY="5"
                                    markerWidth="4" markerHeight="4" orient="auto">
                                    <path d="M 0 0 L 10 5 L 0 10 z" fill="#ef4444" />
                                </marker>
                                <marker id="arrowReturn" viewBox="0 0 10 10" refX="5" refY="5"
                                    markerWidth="4" markerHeight="4" orient="auto">
                                    <path d="M 0 0 L 10 5 L 0 10 z" fill="#10b981" />
                                </marker>
                                <marker id="arrowDialysate" viewBox="0 0 10 10" refX="5" refY="5"
                                    markerWidth="4" markerHeight="4" orient="auto">
                                    <path d="M 0 0 L 10 5 L 0 10 z" fill="#3b82f6" />
                                </marker>
                                <marker id="arrowFiltrate" viewBox="0 0 10 10" refX="5" refY="5"
                                    markerWidth="4" markerHeight="4" orient="auto">
                                    <path d="M 0 0 L 10 5 L 0 10 z" fill="#f59e0b" />
                                </marker>
                            </defs>
                            
                            <!-- Blood Circuit - Access to Filter -->
                            <path class="blood-path" d="M50,200 C100,200 120,200 150,200 C180,200 180,200 200,200" 
                                stroke-width="8" stroke="url(#bloodGradient)" fill="none" 
                                stroke-linecap="round" marker-end="url(#arrowBlood)" />
                            
                            <!-- Return Circuit - Filter to Return -->
                            <path class="return-path" d="M400,200 C450,200 470,200 500,200 C530,200 550,200 580,200" 
                                stroke-width="8" stroke="url(#returnGradient)" fill="none" 
                                stroke-linecap="round" marker-end="url(#arrowReturn)" />
                            
                            <!-- Hemofilter element enhanced -->
                            <g class="filter-group">
                                <!-- Filter housing background -->
                                <rect x="200" y="100" width="200" height="200" rx="10" ry="10" 
                                    fill="#e2e8f0" stroke="#94a3b8" stroke-width="1" />
                                
                                <!-- Filter membrane -->
                                <rect x="230" y="120" width="140" height="160" rx="5" ry="5" 
                                    fill="#f8fafc" stroke="#cbd5e0" stroke-width="1" />
                                
                                <!-- Filter flow channels -->
                                <line x1="230" y1="150" x2="370" y2="150" stroke="#94a3b8" stroke-width="1" stroke-dasharray="3,2" />
                                <line x1="230" y1="180" x2="370" y2="180" stroke="#94a3b8" stroke-width="1" stroke-dasharray="3,2" />
                                <line x1="230" y1="210" x2="370" y2="210" stroke="#94a3b8" stroke-width="1" stroke-dasharray="3,2" />
                                <line x1="230" y1="240" x2="370" y2="240" stroke="#94a3b8" stroke-width="1" stroke-dasharray="3,2" />
                                
                                <!-- Filter Label -->
                                <text x="300" y="320" text-anchor="middle" fill="var(--text)" font-size="16" font-weight="bold">Hemofilter</text>
                                
                                <!-- Filter connection ports -->
                                <circle cx="200" cy="200" r="8" fill="#ef4444" />
                                <circle cx="400" cy="200" r="8" fill="#10b981" />
                                <circle cx="300" cy="100" r="8" fill="#3b82f6" class="dialysate-port" style="display: none;" />
                                <circle cx="300" cy="300" r="8" fill="#f59e0b" />
                            </g>
                            
                            <!-- Dialysate path (shown in CVVHD/CVVHDF) with curved lines -->
                            <g class="dialysate-elements" style="display: none;">
                                <!-- Dialysate Bag -->
                                <g class="dialysate-bag" transform="translate(300, 20)">
                                    <rect x="-40" y="-20" width="80" height="80" rx="10" ry="10" 
                                        fill="url(#dialysateGradient)" stroke="#3b82f6" stroke-width="2" />
                                    <rect x="-40" y="-20" width="80" height="80" rx="10" ry="10" 
                                        fill="url(#fluidPattern)" fill-opacity="0.2" />
                                    <rect x="-5" y="60" width="10" height="20" fill="#3b82f6" />
                                    <text x="0" y="-30" text-anchor="middle" fill="var(--text)" font-size="14" font-weight="bold">Dialysate</text>
                                </g>
                                
                                <!-- Dialysate flow paths -->
                                <path class="dialysate-in-path" d="M300,80 C300,85 300,90 300,100" 
                                    stroke-width="6" stroke="#3b82f6" fill="none" 
                                    stroke-linecap="round" marker-end="url(#arrowDialysate)" />
                                    
                                <path class="dialysate-out-path" d="M300,300 C300,330 300,350 300,375" 
                                    stroke-width="6" stroke="#3b82f6" opacity="0.7" fill="none" 
                                    stroke-linecap="round" marker-end="url(#arrowDialysate)" />
                            </g>
                            
                            <!-- Pre-replacement fluid elements -->
                            <g class="pre-replacement-elements">
                                <!-- Pre-replacement Bag -->
                                <g class="pre-replacement-bag" transform="translate(120, 70)">
                                    <rect x="-30" y="-20" width="60" height="70" rx="8" ry="8" 
                                        fill="url(#replacementGradient)" stroke="#60a5fa" stroke-width="2" />
                                    <rect x="-30" y="-20" width="60" height="70" rx="8" ry="8" 
                                        fill="url(#fluidPattern)" fill-opacity="0.2" />
                                    <rect x="-5" y="50" width="10" height="15" fill="#60a5fa" />
                                    <text x="0" y="-30" text-anchor="middle" fill="var(--text)" font-size="14" font-weight="bold">Pre-filter</text>
                                </g>
                                
                                <!-- Pre-replacement flow path -->
                                <path class="pre-replacement-path" d="M120,135 C120,150 120,170 120,200" 
                                    stroke-width="6" stroke="#60a5fa" fill="none" 
                                    stroke-linecap="round" marker-end="url(#arrowDialysate)" />
                            </g>
                            
                            <!-- Post-replacement fluid elements -->
                            <g class="post-replacement-elements">
                                <!-- Post-replacement Bag -->
                                <g class="post-replacement-bag" transform="translate(480, 70)">
                                    <rect x="-30" y="-20" width="60" height="70" rx="8" ry="8" 
                                        fill="url(#replacementGradient)" stroke="#60a5fa" stroke-width="2" />
                                    <rect x="-30" y="-20" width="60" height="70" rx="8" ry="8" 
                                        fill="url(#fluidPattern)" fill-opacity="0.2" />
                                    <rect x="-5" y="50" width="10" height="15" fill="#60a5fa" />
                                    <text x="0" y="-30" text-anchor="middle" fill="var(--text)" font-size="14" font-weight="bold">Post-filter</text>
                                </g>
                                
                                <!-- Post-replacement flow path -->
                                <path class="post-replacement-path" d="M480,135 C480,150 480,170 480,200" 
                                    stroke-width="6" stroke="#60a5fa" fill="none" 
                                    stroke-linecap="round" marker-end="url(#arrowDialysate)" />
                            </g>
                            
                            <!-- Effluent/Filtrate path & collection -->
                            <g class="effluent-elements">
                                <!-- Effluent Collection Vessel -->
                                <g class="effluent-vessel" transform="translate(300, 400)">
                                    <path d="M-30,-20 L0,-50 L30,-20 L30,20 C30,25 25,30 20,30 L-20,30 C-25,30 -30,25 -30,20 Z" 
                                        fill="#f8fafc" stroke="#64748b" stroke-width="2" />
                                    <path d="M-20,0 L20,0 L20,25 C20,27 18,29 16,29 L-16,29 C-18,29 -20,27 -20,25 Z" 
                                        fill="url(#filtrateGradient)" fill-opacity="0.5" />
                                    <path d="M-20,0 L20,0 L20,25 C20,27 18,29 16,29 L-16,29 C-18,29 -20,27 -20,25 Z" 
                                        fill="url(#fluidPattern)" fill-opacity="0.1" />
                                    <text x="0" y="45" text-anchor="middle" fill="var(--text)" font-size="14" font-weight="bold">Effluent</text>
                                </g>
                                
                                <!-- Effluent flow path -->
                                <path class="effluent-path" d="M300,300 C300,320 300,340 300,360" 
                                    stroke-width="6" stroke="#f59e0b" fill="none" 
                                    stroke-linecap="round" marker-end="url(#arrowFiltrate)" />
                            </g>
                            
                            <!-- Access labels -->
                            <g class="access-labels">
                                <g transform="translate(20, 200)">
                                    <circle cx="0" cy="0" r="10" fill="#ef4444" />
                                    <text x="-15" y="-15" text-anchor="end" fill="var(--text)" font-size="14" font-weight="bold">Access</text>
                                </g>
                                <g transform="translate(610, 200)">
                                    <circle cx="0" cy="0" r="10" fill="#10b981" />
                                    <text x="15" y="-15" text-anchor="start" fill="var(--text)" font-size="14" font-weight="bold">Return</text>
                                </g>
                            </g>
                            
                            <!-- Blood Pump -->
                            <g class="blood-pump" transform="translate(150, 245)">
                                <circle cx="0" cy="0" r="25" fill="#f1f5f9" stroke="#94a3b8" stroke-width="2" />
                                <path d="M-15,-15 L15,15 M-15,15 L15,-15" stroke="#94a3b8" stroke-width="3" />
                                <circle cx="0" cy="0" r="20" fill="none" stroke="#94a3b8" stroke-width="1" stroke-dasharray="3,3">
                                    <animateTransform attributeName="transform" type="rotate" from="0 0 0" to="360 0 0" dur="3s" repeatCount="indefinite" />
                                </circle>
                                <text x="0" y="40" text-anchor="middle" fill="var(--text)" font-size="12">Blood Pump</text>
                            </g>
                            
                            <!-- Animated Flow Elements -->
                            <!-- Blood Flow Animation -->
                            <g class="blood-animation" filter="url(#glow)">
                                <circle class="blood-particle" r="5" fill="#ef4444">
                                    <animateMotion path="M50,200 C100,200 120,200 150,200 C180,200 180,200 200,200" dur="3s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="3s" repeatCount="indefinite" />
                                </circle>
                                <circle class="blood-particle" r="5" fill="#ef4444">
                                    <animateMotion path="M50,200 C100,200 120,200 150,200 C180,200 180,200 200,200" dur="3s" begin="1s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="3s" begin="1s" repeatCount="indefinite" />
                                </circle>
                                <circle class="blood-particle" r="5" fill="#ef4444">
                                    <animateMotion path="M50,200 C100,200 120,200 150,200 C180,200 180,200 200,200" dur="3s" begin="2s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="3s" begin="2s" repeatCount="indefinite" />
                                </circle>
                            </g>
                            
                            <!-- Return Blood Flow Animation -->
                            <g class="return-animation" filter="url(#glow)">
                                <circle class="return-particle" r="5" fill="#10b981">
                                    <animateMotion path="M400,200 C450,200 470,200 500,200 C530,200 550,200 580,200" dur="3s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="3s" repeatCount="indefinite" />
                                </circle>
                                <circle class="return-particle" r="5" fill="#10b981">
                                    <animateMotion path="M400,200 C450,200 470,200 500,200 C530,200 550,200 580,200" dur="3s" begin="1.5s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="3s" begin="1.5s" repeatCount="indefinite" />
                                </circle>
                            </g>
                            
                            <!-- Pre-Replacement Flow Animation -->
                            <g class="pre-replacement-animation" filter="url(#glow)">
                                <circle class="pre-particle" r="4" fill="#60a5fa">
                                    <animateMotion path="M120,135 C120,150 120,170 120,200" dur="2s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="2s" repeatCount="indefinite" />
                                </circle>
                                <circle class="pre-particle" r="4" fill="#60a5fa">
                                    <animateMotion path="M120,135 C120,150 120,170 120,200" dur="2s" begin="1s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="2s" begin="1s" repeatCount="indefinite" />
                                </circle>
                            </g>
                            
                            <!-- Post-Replacement Flow Animation -->
                            <g class="post-replacement-animation" filter="url(#glow)">
                                <circle class="post-particle" r="4" fill="#60a5fa">
                                    <animateMotion path="M480,135 C480,150 480,170 480,200" dur="2s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="2s" repeatCount="indefinite" />
                                </circle>
                                <circle class="post-particle" r="4" fill="#60a5fa">
                                    <animateMotion path="M480,135 C480,150 480,170 480,200" dur="2s" begin="1s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="2s" begin="1s" repeatCount="indefinite" />
                                </circle>
                            </g>
                            
                            <!-- Effluent Flow Animation -->
                            <g class="effluent-animation" filter="url(#glow)">
                                <circle class="effluent-particle" r="4" fill="#f59e0b">
                                    <animateMotion path="M300,300 C300,320 300,340 300,360" dur="3s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="3s" repeatCount="indefinite" />
                                </circle>
                                <circle class="effluent-particle" r="4" fill="#f59e0b">
                                    <animateMotion path="M300,300 C300,320 300,340 300,360" dur="3s" begin="1.5s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="3s" begin="1.5s" repeatCount="indefinite" />
                                </circle>
                            </g>
                            
                            <!-- Dialysate Flow Animation (Hidden by default for CVVH) -->
                            <g class="dialysate-animation" style="display: none;" filter="url(#glow)">
                                <circle class="dialysate-particle" r="4" fill="#3b82f6">
                                    <animateMotion path="M300,80 C300,85 300,90 300,100" dur="2s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="2s" repeatCount="indefinite" />
                                </circle>
                                <circle class="dialysate-particle" r="4" fill="#3b82f6">
                                    <animateMotion path="M300,300 C300,330 300,350 300,375" dur="2.5s" repeatCount="indefinite" />
                                    <animate attributeName="opacity" values="0;1;1;0" keyTimes="0;0.1;0.9;1" dur="2.5s" repeatCount="indefinite" />
                                </circle>
                            </g>
                        </g>
                    </svg>
                </div>
                
                <!-- Waveform Visualization Section -->
                <div class="waveform-visualization">
                    <div class="waveform-tabs">
                        <button class="waveform-tab active" data-wave="pressure">Filter Pressure</button>
                        <button class="waveform-tab" data-wave="flow">Blood Flow</button>
                    </div>
                    <div class="waveform-display">
                        <canvas id="waveform-canvas" width="500" height="180"></canvas>
                    </div>
                </div>
                
                <div class="mode-description" id="mode-description">
                    <h3>Continuous Veno-Venous Hemofiltration (CVVH)</h3>
                    <p>Removes fluid and solutes by convection using replacement fluid. Pre-dilution and/or post-dilution fluid replacement can be used.</p>
                </div>
                
                <div class="circuit-controls">
                    <div class="control-group">
                        <label for="blood-flow">Blood Flow (mL/min):</label>
                        <div style="display: flex; align-items: center; gap: 10px;">
                            <input type="range" id="blood-flow" min="50" max="300" value="150" style="flex: 1;">
                            <span id="blood-flow-value">150</span>
                        </div>
                    </div>
                    <div class="pressure-readings">
                        <div class="pressure">
                            <span>Access</span>
                            <span class="pressure-value" id="access-pressure">-50</span> mmHg
                        </div>
                        <div class="pressure">
                            <span>Pre-filter</span>
                            <span class="pressure-value" id="pre-filter-pressure">180</span> mmHg
                        </div>
                        <div class="pressure">
                            <span>Return</span>
                            <span class="pressure-value" id="return-pressure">80</span> mmHg
                        </div>
                        <div class="pressure">
                            <span>TMP</span>
                            <span class="pressure-value" id="tmp-pressure">120</span> mmHg
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Fluid Management Section -->
        <section class="fluid-section" style="grid-area: fluids;">
            <div class="card">
                <h2><i class="fas fa-tint"></i> Fluid Management</h2>
                
                <div class="fluid-control-group" id="prefilter-controls">
                    <h3><i class="fas fa-arrow-down"></i> Pre-filter Replacement</h3>
                    <div class="fluid-control">
                        <label for="prefilter-rate">Rate (mL/hr)</label>
                        <input type="number" id="prefilter-rate" min="0" max="5000" step="50" value="1000">
                    </div>
                    <div class="fluid-control">
                        <label for="prefilter-solution">Solution</label>
                        <select id="prefilter-solution">
                            <option value="bicarbonate">Bicarbonate (Na 140, HCO₃ 32)</option>
                            <option value="citrate">Citrate (ACD-A)</option>
                            <option value="custom">Custom Composition</option>
                        </select>
                    </div>
                    <div class="fluid-custom" id="prefilter-custom" style="display: none;">
                        <div class="custom-electrolytes">
                            <div class="electrolyte-input">
                                <label>Na⁺ (mEq/L)</label>
                                <input type="number" id="pre-na" value="140" min="130" max="150">
                            </div>
                            <div class="electrolyte-input">
                                <label>K⁺ (mEq/L)</label>
                                <input type="number" id="pre-k" value="4" min="0" max="8">
                            </div>
                            <div class="electrolyte-input">
                                <label>HCO₃⁻ (mEq/L)</label>
                                <input type="number" id="pre-hco3" value="32" min="0" max="40">
                            </div>
                            <div class="electrolyte-input">
                                <label>Ca²⁺ (mEq/L)</label>
                                <input type="number" id="pre-ca" value="3" min="0" max="5">
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="fluid-control-group" id="postfilter-controls">
                    <h3><i class="fas fa-arrow-up"></i> Post-filter Replacement</h3>
                    <div class="fluid-control">
                        <label for="postfilter-rate">Rate (mL/hr)</label>
                        <input type="number" id="postfilter-rate" min="0" max="5000" step="50" value="1000">
                    </div>
                    <div class="fluid-control">
                        <label for="postfilter-solution">Solution</label>
                        <select id="postfilter-solution">
                            <option value="bicarbonate">Bicarbonate (Na 140, HCO₃ 32)</option>
                            <option value="phosphate">Phosphate-containing (P 1.2)</option>
                            <option value="custom">Custom Composition</option>
                        </select>
                    </div>
                </div>
                
                <div class="fluid-control-group" id="dialysate-controls" style="display: none;">
                    <h3><i class="fas fa-exchange-alt"></i> Dialysate</h3>
                    <div class="fluid-control">
                        <label for="dialysate-rate">Rate (mL/hr)</label>
                        <input type="number" id="dialysate-rate" min="0" max="5000" step="50" value="1000">
                    </div>
                    <div class="fluid-control">
                        <label for="dialysate-solution">Solution</label>
                        <select id="dialysate-solution">
                            <option value="standard">Standard (Na 140, K 4)</option>
                            <option value="low-k">Low K (Na 140, K 0)</option>
                            <option value="custom">Custom Composition</option>
                        </select>
                    </div>
                </div>
                
                <div class="fluid-control-group">
                    <h3><i class="fas fa-minus-circle"></i> Fluid Removal</h3>
                    <div class="fluid-control">
                        <label for="fluid-removal-rate">Net Fluid Removal (mL/hr)</label>
                        <input type="number" id="fluid-removal-rate" min="0" max="1000" step="10" value="100">
                    </div>
                    <div class="fluid-control">
                        <label for="patient-fluid-status">Patient Fluid Status</label>
                        <select id="patient-fluid-status">
                            <option value="overloaded">Volume Overloaded</option>
                            <option value="euvolemic">Euvolemic</option>
                            <option value="hypovolemic">Hypovolemic</option>
                        </select>
                    </div>
                </div>
                
                <div class="fluid-summary">
                    <h3><i class="fas fa-calculator"></i> CRRT Dose Summary</h3>
                    <div class="dose-cards">
                        <div class="dose-card">
                            <div class="dose-label">Effluent Rate</div>
                            <div class="dose-value">2100 <span class="dose-unit">mL/hr</span></div>
                            <div class="dose-info">21.0 mL/kg/hr</div>
                        </div>
                        <div class="dose-card">
                            <div class="dose-label">Total Input</div>
                            <div class="dose-value">2000 <span class="dose-unit">mL/hr</span></div>
                        </div>
                        <div class="dose-card">
                            <div class="dose-label">Net Balance</div>
                            <div class="dose-value negative">-100 <span class="dose-unit">mL/hr</span></div>
                            <div class="dose-info">-2400 mL/day</div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Results Section -->
        <section class="results-section" style="grid-area: results;">
            <div class="results-tabs">
                <button class="results-tab active" data-tab="recommendations">Recommendations</button>
                <button class="results-tab" data-tab="monitoring">Monitoring Plan</button>
                <button class="results-tab" data-tab="trends">Trends</button>
            </div>
            <div class="results-content" id="recommendations-content">
                <div class="recommendation-card">
                    <div class="recommendation-title"><i class="fas fa-check-circle"></i> Modality Recommendation</div>
                    <div class="recommendation-body">CVVH is appropriate given the patient's hemodynamic status and solute clearance needs.</div>
                    <div class="recommendation-reason">Reason: Stable solute clearance with minimized protein loss.</div>
                </div>
                <div class="recommendation-card">
                    <div class="recommendation-title"><i class="fas fa-check-circle"></i> Fluid Balance</div>
                    <div class="recommendation-body">Current net fluid removal rate of 100 mL/hr is appropriate based on patient's fluid status.</div>
                    <div class="recommendation-reason">Reason: Patient shows signs of moderate volume overload.</div>
                </div>
                <div class="recommendation-card">
                    <div class="recommendation-title"><i class="fas fa-exclamation-triangle"></i> Anticoagulation Alert</div>
                    <div class="recommendation-body">Consider regional citrate anticoagulation if filter lifespan is less than 24 hours.</div>
                    <div class="recommendation-reason">Reason: Optimize filter life without increasing systemic bleeding risk.</div>
                </div>
            </div>
            <div class="results-content" id="monitoring-content" style="display: none;">
                <div class="recommendation-card">
                    <div class="recommendation-title"><i class="fas fa-clock"></i> Monitoring Schedule</div>
                    <div class="recommendation-body">
                        <ul style="list-style-type: none; padding-left: 0;">
                            <li><i class="fas fa-check"></i> <strong>q4h:</strong> Ionized Ca²⁺, Ca²⁺/Ca²⁺ total ratio</li>
                            <li><i class="fas fa-check"></i> <strong>q6h:</strong> K⁺, Na⁺, HCO₃⁻, BUN, Cr</li>
                            <li><i class="fas fa-check"></i> <strong>q2h:</strong> Filter pressures, access patency</li>
                            <li><i class="fas fa-check"></i> <strong>q8h:</strong> Circuit inspection, air trap check</li>
                            <li><i class="fas fa-check"></i> <strong>Daily:</strong> Mg²⁺, PO₄³⁻, albumin, liver enzymes</li>
                        </ul>
                    </div>
                </div>
                <div class="recommendation-card">
                    <div class="recommendation-title"><i class="fas fa-bell"></i> Alarm Thresholds</div>
                    <div class="recommendation-body">
                        <ul style="list-style-type: none; padding-left: 0;">
                            <li><i class="fas fa-arrow-up"></i> <strong>Access Pressure:</strong> Alarm if < -150 mmHg</li>
                            <li><i class="fas fa-arrow-up"></i> <strong>Return Pressure:</strong> Alarm if > 250 mmHg</li>
                            <li><i class="fas fa-arrow-up"></i> <strong>TMP:</strong> Alarm if > 200 mmHg</li>
                            <li><i class="fas fa-arrow-up"></i> <strong>Filter Pressure:</strong> Alarm if > 300 mmHg</li>
                        </ul>
                    </div>
                </div>
                <div class="recommendation-card">
                    <div class="recommendation-title"><i class="fas fa-user-md"></i> Clinical Assessment</div>
                    <div class="recommendation-body">
                        Perform clinical assessment q6h including:
                        <ul style="list-style-type: none; padding-left: 0; margin-top: 10px;">
                            <li><i class="fas fa-heart"></i> Hemodynamic status</li>
                            <li><i class="fas fa-tint"></i> Fluid balance assessment</li>
                            <li><i class="fas fa-weight"></i> Daily weight</li>
                            <li><i class="fas fa-tablets"></i> Medication review</li>
                        </ul>
                    </div>
                </div>
                
                <div style="display: flex; justify-content: center; margin-top: 20px; gap: 16px;">
                    <button id="update-monitoring-plan" class="btn-action">
                        <i class="fas fa-sync-alt"></i> Update Plan
                    </button>
                    <button id="export-monitoring-plan" class="btn-action">
                        <i class="fas fa-file-export"></i> Export Monitoring Plan
                    </button>
                </div>
            </div>
            <div class="results-content" id="trends-content" style="display: none;">
                <div style="text-align: center; padding: 20px;">
                    <i class="fas fa-chart-line" style="font-size: 3rem; color: var(--primary); margin-bottom: 20px;"></i>
                    <h3>CRRT Parameter Trends</h3>
                    <p>Trend data will display here after at least 6 hours of CRRT therapy.</p>
                    <div style="width: 100%; height: 200px; background-color: var(--input-bg); border-radius: 8px; margin-top: 20px; display: flex; align-items: center; justify-content: center;">
                        <p style="color: #64748b;">Awaiting data collection</p>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Dark mode toggle
            const themeToggle = document.getElementById('theme-toggle');
            
            // Check for saved theme preference or prefer-color-scheme
            const savedTheme = localStorage.getItem('theme');
            if (savedTheme) {
                document.documentElement.setAttribute('data-theme', savedTheme);
            } else if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
                document.documentElement.setAttribute('data-theme', 'dark');
            }
            
            // Update Monitoring Plan functionality
            const updateMonitoringBtn = document.getElementById('update-monitoring-plan');
            if (updateMonitoringBtn) {
                updateMonitoringBtn.addEventListener('click', function() {
                    this.disabled = true;
                    this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';
                    
                    // Simulate recalculation based on current patient data
                    setTimeout(() => {
                        // Re-enable button
                        this.disabled = false;
                        this.innerHTML = '<i class="fas fa-sync-alt"></i> Update Plan';
                        
                        // Show notification
                        showNotification('Monitoring plan updated based on current patient parameters!', 'success');
                    }, 1200);
                });
            }
            
            // Export Monitoring Plan functionality
            const exportMonitoringBtn = document.getElementById('export-monitoring-plan');
            if (exportMonitoringBtn) {
                exportMonitoringBtn.addEventListener('click', function() {
                    // Get patient details
                    const weight = document.getElementById('weight').value || '70';
                    const age = document.getElementById('age').value || '50';
                    
                    // Create monitoring plan text content
                    const monitoringPlan = 
`CRRT Monitoring Plan
Date: ${new Date().toLocaleDateString()}
Time: ${new Date().toLocaleTimeString()}

Patient Information:
Weight: ${weight} kg
Age: ${age} years

Monitoring Schedule:
- q6h: K⁺, Na⁺, HCO₃⁻, BUN, Cr
- q2h: Filter pressures, access patency, air trap check
- q4h: Ionized Ca²⁺, Ca²⁺/Ca²⁺ total ratio
- Daily: Mg²⁺, PO₄³⁻, albumin, liver enzymes

Alarm Thresholds:
- Access Pressure: < -150 mmHg
- Return Pressure: > 250 mmHg
- TMP: > 200 mmHg
- Filter Pressure: > 300 mmHg

Clinical Assessment (q6h):
- Hemodynamic status
- Fluid balance assessment
- Daily weight
- Medication review

Generated by NephroGuide CRRT Decision Support`;

                    // Create download link
                    const element = document.createElement('a');
                    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(monitoringPlan));
                    element.setAttribute('download', `CRRT_Monitoring_Plan_${new Date().toISOString().slice(0,10)}.txt`);
                    
                    element.style.display = 'none';
                    document.body.appendChild(element);
                    
                    // Click to download
                    element.click();
                    
                    // Remove element
                    document.body.removeChild(element);
                    
                    // Show notification
                    showNotification('Monitoring Plan exported successfully!', 'success');
                });
            }
            
            // Toggle theme
            themeToggle.addEventListener('click', function() {
                const currentTheme = document.documentElement.getAttribute('data-theme');
                const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
                
                document.documentElement.setAttribute('data-theme', newTheme);
                localStorage.setItem('theme', newTheme);
            });
            
            // Pre-filter solution select
            const prefilterSolution = document.getElementById('prefilter-solution');
            const prefilterCustom = document.getElementById('prefilter-custom');
            
            prefilterSolution.addEventListener('change', function() {
                prefilterCustom.style.display = this.value === 'custom' ? 'block' : 'none';
            });
            
            // Modality buttons
            const modalityBtns = document.querySelectorAll('.modality-btn');
            
            modalityBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const modality = this.dataset.modality;
                    
                    modalityBtns.forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Update dialysate controls visibility
                    const dialysateControls = document.getElementById('dialysate-controls');
                    if (modality === 'CVVHD' || modality === 'CVVHDF') {
                        dialysateControls.style.display = 'block';
                    } else {
                        dialysateControls.style.display = 'none';
                    }
                    
                    // Update path visibility in SVG
                    const svg = document.getElementById('circuit-svg');
                    
                    // Update dialysate path visibility
                    const dialysateElements = svg.querySelector('.dialysate-elements');
                    const dialysatePort = svg.querySelector('.dialysate-port');
                    const dialysateAnimation = svg.querySelector('.dialysate-animation');
                    
                    if (modality === 'CVVHD' || modality === 'CVVHDF') {
                        dialysateElements.style.display = 'block';
                        dialysatePort.style.display = 'block';
                        dialysateAnimation.style.display = 'block';
                    } else {
                        dialysateElements.style.display = 'none';
                        dialysatePort.style.display = 'none';
                        dialysateAnimation.style.display = 'none';
                    }
                    
                    // Update pre-replacement elements visibility
                    const preReplacementElements = svg.querySelector('.pre-replacement-elements');
                    const preReplacementAnimation = svg.querySelector('.pre-replacement-animation');
                    
                    if (modality === 'CVVH' || modality === 'CVVHDF') {
                        preReplacementElements.style.display = 'block';
                        preReplacementAnimation.style.display = 'block';
                        document.getElementById('prefilter-controls').style.display = 'block';
                    } else {
                        preReplacementElements.style.display = 'none';
                        preReplacementAnimation.style.display = 'none';
                        document.getElementById('prefilter-controls').style.display = 'none';
                    }
                    
                    // Update post-replacement elements visibility
                    const postReplacementElements = svg.querySelector('.post-replacement-elements');
                    const postReplacementAnimation = svg.querySelector('.post-replacement-animation');
                    
                    if (modality === 'CVVH' || modality === 'CVVHDF' || modality === 'TPE') {
                        postReplacementElements.style.display = 'block';
                        postReplacementAnimation.style.display = 'block';
                        document.getElementById('postfilter-controls').style.display = 'block';
                    } else {
                        postReplacementElements.style.display = 'none';
                        postReplacementAnimation.style.display = 'none';
                        document.getElementById('postfilter-controls').style.display = 'none';
                    }
                    
                    // Special handling for TPE modality
                    if (modality === 'TPE') {
                        // In TPE mode, we use a different color for replacement fluid (albumin/plasma)
                        const replacementBags = svg.querySelectorAll('.post-replacement-bag rect');
                        replacementBags.forEach(rect => {
                            if (!rect.hasAttribute('data-original-fill')) {
                                rect.setAttribute('data-original-fill', rect.getAttribute('fill'));
                            }
                            if (rect.getAttribute('fill').includes('replacementGradient')) {
                                rect.setAttribute('fill', 'url(#filtrateGradient)');
                            }
                        });
                    } else {
                        // Restore original colors
                        const replacementBags = svg.querySelectorAll('.post-replacement-bag rect');
                        replacementBags.forEach(rect => {
                            if (rect.hasAttribute('data-original-fill')) {
                                rect.setAttribute('fill', rect.getAttribute('data-original-fill'));
                            }
                        });
                    }
                    
                    // Update modality description
                    updateModalityDescription(modality);
                });
            });
            
            // Update blood flow animation speed based on slider
            const bloodFlowSlider = document.getElementById('blood-flow');
            const bloodFlowValue = document.getElementById('blood-flow-value');
            
            bloodFlowSlider.addEventListener('input', function() {
                const flow = parseInt(this.value);
                bloodFlowValue.textContent = flow;
                
                // Update animation speed based on flow rate
                const bloodParticles = document.querySelectorAll('.blood-particle animate, .return-particle animate');
                const speedFactor = 3 * (150 / flow); // Baseline speed at 150 ml/min
                
                bloodParticles.forEach(anim => {
                    if (anim.getAttribute('attributeName') === 'opacity') return;
                    anim.setAttribute('dur', speedFactor + 's');
                });
                
                // Update pressure values based on blood flow
                const accessPressure = document.getElementById('access-pressure');
                const preFilterPressure = document.getElementById('pre-filter-pressure');
                const returnPressure = document.getElementById('return-pressure');
                const tmpPressure = document.getElementById('tmp-pressure');
                
                accessPressure.textContent = Math.round(-30 - flow / 10);
                preFilterPressure.textContent = Math.round(100 + flow / 2);
                returnPressure.textContent = Math.round(50 + flow / 5);
                tmpPressure.textContent = Math.round(80 + flow / 3);
                
                // Visual feedback - change pressure values color based on values
                if (parseInt(accessPressure.textContent) < -80) {
                    accessPressure.style.color = 'var(--danger)';
                } else {
                    accessPressure.style.color = 'var(--primary)';
                }
                
                if (parseInt(preFilterPressure.textContent) > 200) {
                    preFilterPressure.style.color = 'var(--danger)';
                } else {
                    preFilterPressure.style.color = 'var(--primary)';
                }
                
                if (parseInt(tmpPressure.textContent) > 180) {
                    tmpPressure.style.color = 'var(--warning)';
                    if (parseInt(tmpPressure.textContent) > 220) {
                        tmpPressure.style.color = 'var(--danger)';
                    }
                } else {
                    tmpPressure.style.color = 'var(--primary)';
                }
            });
            
            // Add tooltips to circuit elements
            function addCircuitTooltips() {
                const tooltipData = {
                    '.filter-group': 'The hemofilter contains semi-permeable membranes that remove fluids and solutes from blood based on pressure gradients.',
                    '.blood-pump': 'The blood pump drives blood through the extracorporeal circuit at the set flow rate.',
                    '.pre-replacement-elements': 'Pre-filter replacement fluid adds volume before the filter, diluting blood and reducing clotting risk.',
                    '.post-replacement-elements': 'Post-filter replacement fluid adds volume after filtration to achieve desired fluid balance.',
                    '.effluent-vessel': 'Collection of removed fluid, solutes, and toxins from the blood.',
                    '.dialysate-bag': 'Dialysate fluid runs counter to blood flow, creating concentration gradients for diffusion of small molecules.'
                };
                
                const svg = document.getElementById('circuit-svg');
                
                for (const [selector, text] of Object.entries(tooltipData)) {
                    const element = svg.querySelector(selector);
                    if (element) {
                        element.setAttribute('data-tooltip', text);
                        element.style.cursor = 'pointer';
                        
                        element.addEventListener('mouseover', function(e) {
                            const tooltip = document.createElement('div');
                            tooltip.className = 'circuit-tooltip';
                            tooltip.textContent = this.getAttribute('data-tooltip');
                            tooltip.style.position = 'absolute';
                            tooltip.style.left = (e.pageX + 10) + 'px';
                            tooltip.style.top = (e.pageY + 10) + 'px';
                            tooltip.style.backgroundColor = 'var(--card-bg)';
                            tooltip.style.color = 'var(--text)';
                            tooltip.style.padding = '8px 12px';
                            tooltip.style.borderRadius = '8px';
                            tooltip.style.maxWidth = '250px';
                            tooltip.style.zIndex = '1000';
                            tooltip.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';
                            tooltip.style.border = '1px solid var(--border-color)';
                            tooltip.style.fontSize = '0.9rem';
                            document.body.appendChild(tooltip);
                            
                            this.addEventListener('mousemove', function(e) {
                                tooltip.style.left = (e.pageX + 10) + 'px';
                                tooltip.style.top = (e.pageY + 10) + 'px';
                            });
                            
                            this.addEventListener('mouseout', function() {
                                document.body.removeChild(tooltip);
                            }, { once: true });
                        });
                    }
                }
            }
            
            // Initialize tooltips after DOM is fully loaded
            addCircuitTooltips();
            
            // Results tab functionality
            const resultsTabs = document.querySelectorAll('.results-tab');
            
            resultsTabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    const tabName = this.dataset.tab;
                    
                    // Update active tab
                    resultsTabs.forEach(t => t.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Show corresponding content
                    document.querySelectorAll('.results-content').forEach(content => {
                        content.style.display = 'none';
                    });
                    
                    document.getElementById(`${tabName}-content`).style.display = 'block';
                });
            });
            
            // Waveform tab functionality
            const waveformTabs = document.querySelectorAll('.waveform-tab');
            
            waveformTabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    waveformTabs.forEach(t => t.classList.remove('active'));
                    this.classList.add('active');
                });
            });
            
            // Function to update modality description
            function updateModalityDescription(modality) {
                const descriptionContainer = document.getElementById('mode-description');
                let title, description;
                
                switch (modality) {
                    case 'CVVH':
                        title = 'Continuous Veno-Venous Hemofiltration (CVVH)';
                        description = 'Removes fluid and solutes by convection using replacement fluid. Pre-dilution and/or post-dilution fluid replacement can be used.';
                        break;
                    case 'CVVHD':
                        title = 'Continuous Veno-Venous Hemodialysis (CVVHD)';
                        description = 'Removes solutes primarily by diffusion using dialysate. Effective for small molecule clearance.';
                        break;
                    case 'CVVHDF':
                        title = 'Continuous Veno-Venous Hemodiafiltration (CVVHDF)';
                        description = 'Combines diffusion and convection using both dialysate and replacement fluids for optimal clearance of small and middle molecules.';
                        break;
                    case 'SCUF':
                        title = 'Slow Continuous Ultrafiltration (SCUF)';
                        description = 'Primarily for fluid removal with minimal solute clearance. Used for volume overload with adequate renal function.';
                        break;
                    case 'TPE':
                        title = 'Therapeutic Plasma Exchange (TPE)';
                        description = 'Removes plasma and replaces with albumin or FFP. Used for autoimmune conditions and specific toxin removal.';
                        break;
                    default:
                        title = 'Continuous Veno-Venous Hemofiltration (CVVH)';
                        description = 'Removes fluid and solutes by convection using replacement fluid. Pre-dilution and/or post-dilution fluid replacement can be used.';
                }
                
                descriptionContainer.innerHTML = `<h3>${title}</h3><p>${description}</p>`;
            }
            
            // Initialize default modality
            updateModalityDescription('CVVH');
            
            // Initialize waveform animations
            initWaveformAnimations();
            
            // Check Now button animation
            const checkNowBtn = document.getElementById('check-now-btn');
            checkNowBtn.addEventListener('click', function() {
                this.disabled = true;
                this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
                
                setTimeout(() => {
                    this.disabled = false;
                    this.innerHTML = '<i class="fas fa-play-circle"></i> Check Now';
                    
                    // Show a success toast or notification
                    showNotification('CRRT parameters checked and updated!', 'success');
                }, 1500);
            });
            
            // Notification function
            function showNotification(message, type) {
                const notification = document.createElement('div');
                notification.className = `notification ${type}`;
                notification.innerHTML = `
                    <div class="notification-icon">
                        <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
                    </div>
                    <div class="notification-message">${message}</div>
                    <button class="notification-close"><i class="fas fa-times"></i></button>
                `;
                
                document.body.appendChild(notification);
                
                // Add styles for notification
                const style = document.createElement('style');
                style.textContent = `
                    .notification {
                        position: fixed;
                        bottom: 20px;
                        right: 20px;
                        background: var(--card-bg);
                        border-left: 4px solid var(--primary);
                        padding: 16px;
                        border-radius: 8px;
                        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
                        display: flex;
                        align-items: center;
                        gap: 12px;
                        z-index: 1000;
                        max-width: 350px;
                        animation: slide-in 0.3s ease forwards;
                    }
                    
                    .notification.success {
                        border-left-color: var(--success);
                    }
                    
                    .notification.error {
                        border-left-color: var(--danger);
                    }
                    
                    .notification-icon {
                        color: var(--success);
                        font-size: 18px;
                    }
                    
                    .notification.error .notification-icon {
                        color: var(--danger);
                    }
                    
                    .notification-message {
                        flex: 1;
                    }
                    
                    .notification-close {
                        background: transparent;
                        border: none;
                        color: var(--text);
                        cursor: pointer;
                        opacity: 0.5;
                        transition: opacity 0.2s;
                        padding: 0;
                    }
                    
                    .notification-close:hover {
                        opacity: 1;
                    }
                    
                    @keyframes slide-in {
                        from {
                            transform: translateX(100%);
                            opacity: 0;
                        }
                        to {
                            transform: translateX(0);
                            opacity: 1;
                        }
                    }
                    
                    @keyframes slide-out {
                        from {
                            transform: translateX(0);
                            opacity: 1;
                        }
                        to {
                            transform: translateX(100%);
                            opacity: 0;
                        }
                    }
                `;
                
                document.head.appendChild(style);
                
                // Auto remove after 5 seconds
                setTimeout(() => {
                    notification.style.animation = 'slide-out 0.3s ease forwards';
                    setTimeout(() => {
                        document.body.removeChild(notification);
                    }, 300);
                }, 5000);
                
                // Close button functionality
                notification.querySelector('.notification-close').addEventListener('click', () => {
                    notification.style.animation = 'slide-out 0.3s ease forwards';
                    setTimeout(() => {
                        document.body.removeChild(notification);
                    }, 300);
                });
            }
            
            // Calculate CRRT dose when parameters change
            function updateCalculations() {
                // This would be implemented to update the dose cards based on input changes
            }
        });
        
        // Waveform Animation Functions
        function initWaveformAnimations() {
            // Existing waveform animation code...
        }
    </script>
</body>
</html>